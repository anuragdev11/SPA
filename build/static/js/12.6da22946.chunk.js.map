{"version":3,"sources":["assets/logos/ledger.svg","assets/logos/history.svg","assets/logos/OldPulseLoader.svg","components/segmentationController/SegmentationReport.js","components/reusableComponents/AutoComplete.js","components/reusableComponents/Pagination.js","components/reusableComponents/MDTable.js"],"names":["module","exports","SegmentationReport","props","handleGroupChange","setState","myGroupChecked","state","Event","handleDottedGroupChange","myDottedGroupChecked","handleAssignChange","event","assignType","target","value","handleReportChange","reportType","handleDrawerOpen","open","showReportHandler","showReport","showFilters","showTable","tableData","showProgress","data","count","activePage","pageStart","employeeId","exportEnable","bind","paging","document","title","this","employeeid","toastr","options","salesAssignCheck","getElementById","teleAssignCheck","assigneeValue","segmentReportCheck","renewalReportCheck","isMyGroup","myGroup","checked","isMyDottedGroup","myDottedGroup","assigneeType","assigneeID","substr","lastIndexOf","length","warning","progressStatus","empID","AK","bodyData","fetch","method","headers","then","response","json","body","status","error","message","success","catch","console","log","columns","segmentationData","renewalData","Object","keys","map","val","newColumn","label","field","width","push","rows","newRow","key","className","src","Ledger","style","height","cursor","marginRight","onClick","window","History","completeData","assignCheck","Math","floor","classes","theme","root","position","classNames","appBar","appBarShift","disableGutters","color","aria-label","menuButton","backgroundColor","padding","left","variant","disabled","right","top","exportToExcel","drawer","anchor","paper","drawerPaper","textColor","typefont","direction","row","control","id","onChange","search","defaultValue","employeename","menuid","fnsid","component","type","content","marginTop","Loader","defaultPaging","info","React","Component","withStyles","checkBox","marginBottom","display","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","hide","flexShrink","fontFamily","fontWeight","drawerHeader","alignItems","mixins","toolbar","justifyContent","flexGrow","spacing","unit","contentShift","withTheme","Asynchronous","useState","setOpen","setOptions","loading","setLoading","option","useEffect","onOpen","onClose","getOptionSelected","getOptionLabel","popupIcon","renderInput","params","fullWidth","countries","MyGroup","undefined","Mygroup","url","res","result","InputProps","PaginationPage","items","borderRadius","start","end","i","active","circle","DatatablePage","Card","CardContent","innerStyle","striped","bordered","responsive","hover","searching","noBottomColumns","sortable","entries","Pagination","ospaging"],"mappings":"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","file":"static/js/12.6da22946.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ledger.8133cf72.svg\";","module.exports = __webpack_public_path__ + \"static/media/history.be0cae18.svg\";","module.exports = __webpack_public_path__ + \"static/media/OldPulseLoader.b788bb75.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Button from '@material-ui/core/Button';\r\nimport Asynchronous from \"../reusableComponents/AutoComplete\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.css'\r\nimport DatatablePage from \"../reusableComponents/MDTable\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Ledger from '../../assets/logos/ledger.svg';\r\nimport History from '../../assets/logos/history.svg';\r\nimport Loader from '../../assets/logos/OldPulseLoader.svg';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {Event}  from '../../GoogleAnalytics';\r\nimport \"./styles.css\"\r\n\r\nconst drawerWidth = 330;\r\n\r\nconst styles = theme => ({\r\n    textColor:{\r\n      color: \"\"\r\n    },\r\n    checkBox: {\r\n        marginBottom: \"0px!important\"\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 0,\r\n        marginRight: 20,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    typefont: {\r\n      fontFamily: \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif;\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'center',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n});\r\n\r\n\r\n\r\nclass SegmentationReport extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            showReport: false,\r\n            showFilters: false,\r\n            showTable: false,\r\n            tableData: [],\r\n            showProgress: false,\r\n            data: {},\r\n            count: 0,\r\n            activePage: 0,\r\n            pageStart: 1,\r\n            assignType: \"1\",\r\n            reportType: \"3\",\r\n            myGroupChecked: true,\r\n            myDottedGroupChecked: false,\r\n            employeeId: \"\",\r\n            exportEnable: true\r\n        };\r\n        this.showReportHandler = this.showReportHandler.bind(this);\r\n        this.paging = this.paging.bind(this);\r\n    }\r\n\r\n    handleGroupChange = () => {\r\n        this.setState({myGroupChecked: !this.state.myGroupChecked})\r\n        Event(\"MyGroup\")\r\n    };\r\n\r\n    handleDottedGroupChange = () => {\r\n        this.setState({myDottedGroupChecked: !this.state.myDottedGroupChecked})\r\n        Event(\"MyDottedGroup\")\r\n    }\r\n\r\n    handleAssignChange = (event) => {\r\n        this.setState({assignType: event.target.value})\r\n        if(event.target.value === \"1\")\r\n            Event(\"SalesAssignedTo\")\r\n        else\r\n            Event(\"TeleAssignedTo\")\r\n    };\r\n\r\n    handleReportChange = (event) => {\r\n        this.setState({reportType: event.target.value})\r\n        if(event.target.value === \"3\")\r\n            Event(\"SegmentationReport\")\r\n        else\r\n            Event(\"RenewalReport\")\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        if(this.state.open){\r\n            Event(\"DrawerClose\")\r\n        }\r\n        this.setState({open: !this.state.open});\r\n    };\r\n\r\n    showReportHandler = () => {\r\n        this.setState({showReport: true});\r\n    };\r\n\r\n    componentWillMount() {\r\n        document.title = \"Segmentation Report\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({open:true,employeeId: this.props.employeeid})\r\n        toastr.options = {\r\n            \"closeButton\": true,\r\n            \"debug\": false,\r\n            \"newestOnTop\": true,\r\n            \"progressBar\": true,\r\n            \"positionClass\": \"toast-top-right\",\r\n            \"preventDuplicates\": false,\r\n            \"onclick\": null,\r\n            \"showDuration\": \"300\",\r\n            \"hideDuration\": \"1000\",\r\n            \"timeOut\": \"5000\",\r\n            \"extendedTimeOut\": \"1000\",\r\n            \"showEasing\": \"swing\",\r\n            \"hideEasing\": \"linear\",\r\n            \"showMethod\": \"fadeIn\",\r\n            \"hideMethod\": \"fadeOut\"\r\n        };\r\n    }\r\n\r\n    async showTable() {\r\n        this.setState({exportEnable: true})\r\n        const salesAssignCheck = document.getElementById(\"SalesAssign\");\r\n        const teleAssignCheck = document.getElementById(\"TeleAssign\");\r\n        const assigneeValue = document.getElementById(\"employee\");\r\n        const segmentReportCheck = document.getElementById(\"SegmentReport\");\r\n        const renewalReportCheck = document.getElementById(\"RenewalReport\");\r\n        const isMyGroup = document.getElementById(\"MyGroup\");\r\n\r\n        let myGroup = false;\r\n        if (isMyGroup.checked) {\r\n            myGroup = true;\r\n        }\r\n\r\n        const isMyDottedGroup = document.getElementById(\"MyDottedGroup\");\r\n        let myDottedGroup = false;\r\n        if (isMyDottedGroup.checked) {\r\n            myDottedGroup = true;\r\n        }\r\n\r\n        let reportType = 1;\r\n        if (segmentReportCheck.checked) {\r\n            reportType = 1;\r\n        } else {\r\n            reportType = 2;\r\n        }\r\n\r\n        let assigneeType = \"\";\r\n        if (salesAssignCheck.checked) {\r\n            assigneeType = \"Sale\";\r\n        } else {\r\n            assigneeType = \"CC\";\r\n        }\r\n\r\n        const assigneeID = assigneeValue.value.substr(assigneeValue.value.lastIndexOf(\"-\") + 2, assigneeValue.value.length - 1)\r\n        this.setState({employeeId:assigneeID})\r\n        if (!salesAssignCheck.checked && !teleAssignCheck.checked) {\r\n            \r\n            toastr.warning(\"Please select Assigned To\")\r\n        } else {\r\n            if (assigneeValue.value === \"\") {\r\n                \r\n                toastr.warning(\"Assignee Name Cannot be blank\")\r\n            } else {\r\n                if (!segmentReportCheck.checked && !renewalReportCheck.checked) {\r\n                    toastr.options = {\r\n                        \"closeButton\": true,\r\n                        \"debug\": false,\r\n                        \"newestOnTop\": true,\r\n                        \"progressBar\": true,\r\n                        \"positionClass\": \"toast-top-right\",\r\n                        \"preventDuplicates\": false,\r\n                        \"onclick\": null,\r\n                        \"showDuration\": \"300\",\r\n                        \"hideDuration\": \"1000\",\r\n                        \"timeOut\": \"5000\",\r\n                        \"extendedTimeOut\": \"1000\",\r\n                        \"showEasing\": \"swing\",\r\n                        \"hideEasing\": \"linear\",\r\n                        \"showMethod\": \"fadeIn\",\r\n                        \"hideMethod\": \"fadeOut\"\r\n                    }\r\n                    toastr.warning(\"Please select Report Type\")\r\n                } else {\r\n                    const progressStatus = false;\r\n                    const empID = this.props.employeeid;\r\n                    const AK = this.props.AK;\r\n                    let bodyData = {};\r\n                    this.setState({showProgress: true, showTable: false, open: false,pageStart: 1,activePage: 0});\r\n                    await fetch('https://merp.intermesh.net/go/report/v1/segmentation?empid=' + empID + '&renewal=' + reportType + '&isMyDottedGroup=' + myDottedGroup + '&searchtype=' + assigneeType + '&start=1&isMyGroup=' + myGroup + '&end=11&requestfrom=WEBERP&assignedTo=' + assigneeID + '&AK=' + AK +\"&isExport=0\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json'\r\n                        },\r\n                    })\r\n                        .then(function (response) {\r\n                            return response.json()\r\n                        }).then(function (body) {\r\n                            if (body.status === 500) {\r\n                                toastr.options = {\r\n                                    \"closeButton\": true,\r\n                                    \"debug\": false,\r\n                                    \"newestOnTop\": true,\r\n                                    \"progressBar\": true,\r\n                                    \"positionClass\": \"toast-top-right\",\r\n                                    \"preventDuplicates\": false,\r\n                                    \"onclick\": null,\r\n                                    \"showDuration\": \"300\",\r\n                                    \"hideDuration\": \"1000\",\r\n                                    \"timeOut\": \"5000\",\r\n                                    \"extendedTimeOut\": \"1000\",\r\n                                    \"showEasing\": \"swing\",\r\n                                    \"hideEasing\": \"linear\",\r\n                                    \"showMethod\": \"fadeIn\",\r\n                                    \"hideMethod\": \"fadeOut\"\r\n                                }\r\n                                toastr.error(body.message)\r\n                            } else {\r\n                                toastr.options = {\r\n                                    \"closeButton\": true,\r\n                                    \"debug\": false,\r\n                                    \"newestOnTop\": true,\r\n                                    \"progressBar\": true,\r\n                                    \"positionClass\": \"toast-top-right\",\r\n                                    \"preventDuplicates\": false,\r\n                                    \"onclick\": null,\r\n                                    \"showDuration\": \"300\",\r\n                                    \"hideDuration\": \"1000\",\r\n                                    \"timeOut\": \"5000\",\r\n                                    \"extendedTimeOut\": \"1000\",\r\n                                    \"showEasing\": \"swing\",\r\n                                    \"hideEasing\": \"linear\",\r\n                                    \"showMethod\": \"fadeIn\",\r\n                                    \"hideMethod\": \"fadeOut\"\r\n                                };\r\n                                toastr.success(body.message);\r\n                                if (body.status !== 204) {\r\n                                    bodyData = body\r\n                                }\r\n\r\n                            }\r\n                        }).catch(error => console.log(\"Error\"))\r\n\r\n                    if (bodyData.data) {\r\n                        let columns = [];\r\n                        let count = bodyData.data.count;\r\n                        let data = [];\r\n                        if (bodyData.data.segmentationData)\r\n                            data = bodyData.data.segmentationData\r\n                        else\r\n                            data = bodyData.data.renewalData\r\n                        Object.keys(data[0]).map(function (val) {\r\n\r\n                            if(val !== \"COMPANYID\") {\r\n                                let newColumn = {\r\n                                    label: val,\r\n                                    field: val,\r\n                                    width: 100\r\n                                };\r\n\r\n                                columns.push(newColumn)\r\n                            }\r\n                        });\r\n\r\n                        columns.push({\r\n                            label: 'Action',\r\n                            field: 'Action'\r\n                        });\r\n\r\n                        let rows = [];\r\n                        data.map(function (val) {\r\n                            let newRow = {}\r\n                            Object.keys(val).map(function (key) {\r\n\r\n                                if(key === \"COMPANYID\"){\r\n                                    newRow['Action']  = [<div className=\"d-flex\"><img src={Ledger} style={{width: \"20px\",height: \"20px\",cursor: \"pointer\",marginRight: \"10px\"}} title=\"Client Ledger\" onClick={()=>{window.open('http://weberp.intermesh.net/STS/STSDetpopup.aspx?comp_id='+val[key]+'&ISCL=1','_blank','toolbar=no,location=0,directories=no,status=no,menubar=no,titlebar=no,scrollbars=yes,resizable=no,copyhistory=no,width=905,height=565,left=300,top=200,screenX=150,screenY=100')}}/><img src={History} style={{width: \"20px\",height: \"20px\",cursor: \"pointer\"}} title=\"STS\" onClick={()=>{window.open('http://weberp.intermesh.net/STS/STSDetpopup.aspx?comp_id='+val[key],'_blank','toolbar=no,location=no,directories=no,status=no,scrollbars=yes,resizable=yes,copyhistory=no,width=905,height=565,left=150,top=100,screenX=150,screenY=100')}}/></div>]}else {\r\n                                    newRow[key] = val[key] === null || val[key] === \"\" ? \"N/A\" : val[key];\r\n                                }\r\n                            });\r\n                            rows.push(newRow)\r\n                        });\r\n\r\n\r\n\r\n                        let completeData = {\r\n                            columns: columns,\r\n                            rows: rows\r\n                        };\r\n                        await this.setState({\r\n                            showProgress: progressStatus,\r\n                            showTable: true,\r\n                            tableData: bodyData.data.segmentationData,\r\n                            data: completeData,\r\n                            count: count,\r\n                            exportEnable: false\r\n                        });\r\n                    } else\r\n                        await this.setState({showProgress: progressStatus, open: true,exportEnable: true});\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        Event(\"Search\")\r\n    }\r\n\r\n    async exportToExcel() {\r\n        const assigneeID = this.state.employeeId\r\n        const assignCheck = this.state.assignType\r\n        const reportType = this.state.reportType-2;\r\n        const myGroup = this.state.myGroupChecked;\r\n        const myDottedGroup = this.state.myDottedGroupChecked;\r\n\r\n        let assigneeType = \"\";\r\n        if (assignCheck === \"1\") {\r\n            assigneeType = \"Sale\";\r\n        } else {\r\n            assigneeType = \"CC\";\r\n        }\r\n\r\n                    const progressStatus = false;\r\n                    const empID = this.props.employeeid;\r\n                    const AK = this.props.AK;\r\n                    let bodyData = {};\r\n                    this.setState({showProgress: true, showTable: false, open: false,pageStart: 1,activePage: 0});\r\n                    await fetch('https://merp.intermesh.net/go/report/v1/segmentation?empid=' + empID + '&renewal=' + reportType + '&isMyDottedGroup=' + myDottedGroup + '&searchtype=' + assigneeType + '&start=1&isMyGroup=' + myGroup + '&end=11&requestfrom=WEBERP&assignedTo=' + assigneeID + '&AK=' + AK +\"&isExport=1\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json'\r\n                        },\r\n                    })\r\n                        .then(function (response) {\r\n                            return response.json()\r\n                        }).then(function (body) {\r\n                            if (body.status === 500) {\r\n                                toastr.error(\"Some error occurred! Please try again later\")\r\n                            } else {\r\n                                toastr.success(\"Your request has been successfully queued. You will receive an email shortly.\");\r\n                            }\r\n                        }).catch(error => console.log(\"Error\"))\r\n                        await this.setState({showProgress: progressStatus, open: true,showTable: false});\r\n\r\n                        Event(\"Export\")\r\n                }\r\n\r\n\r\n    async paging(pageStart) {\r\n\r\n        const assigneeID = this.state.employeeId\r\n        const assignCheck = this.state.assignType\r\n        const reportType = this.state.reportType-2;\r\n        const myGroup = this.state.myGroupChecked;\r\n        const myDottedGroup = this.state.myDottedGroupChecked;\r\n\r\n        let assigneeType = \"\";\r\n        if (assignCheck === \"1\") {\r\n            assigneeType = \"Sale\";\r\n        } else {\r\n            assigneeType = \"CC\";\r\n        }\r\n\r\n\r\n\r\n        const progressStatus = false;\r\n                    const empID = this.props.employeeid;\r\n                    const AK = this.props.AK;\r\n                    let bodyData = {};\r\n            this.setState({showProgress: true, open: false});\r\n            await fetch('https://merp.intermesh.net/go/report/v1/segmentation?empid=' + empID + '&renewal=' + reportType + '&isMyDottedGroup=' + myDottedGroup + '&searchtype=' + assigneeType + '&start='+pageStart+'&isMyGroup=' + myGroup + '&end='+(pageStart+10)+'&requestfrom=WEBERP&assignedTo=' + assigneeID + '&AK=' + AK + '&isExport=0', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json'\r\n                        },\r\n                    })\r\n                        .then(function (response) {\r\n                            return response.json()\r\n                        }).then(function (body) {\r\n                            if (body.status === 500) {\r\n                                toastr.options = {\r\n                                    \"closeButton\": true,\r\n                                    \"debug\": false,\r\n                                    \"newestOnTop\": true,\r\n                                    \"progressBar\": true,\r\n                                    \"positionClass\": \"toast-top-right\",\r\n                                    \"preventDuplicates\": false,\r\n                                    \"onclick\": null,\r\n                                    \"showDuration\": \"300\",\r\n                                    \"hideDuration\": \"1000\",\r\n                                    \"timeOut\": \"5000\",\r\n                                    \"extendedTimeOut\": \"1000\",\r\n                                    \"showEasing\": \"swing\",\r\n                                    \"hideEasing\": \"linear\",\r\n                                    \"showMethod\": \"fadeIn\",\r\n                                    \"hideMethod\": \"fadeOut\"\r\n                                }\r\n                                toastr.error(body.message)\r\n                            } else {\r\n                                if (body.status !== 204) {\r\n                                    bodyData = body\r\n                                    console.log(bodyData)\r\n                                }\r\n\r\n                            }\r\n                        }).catch(error => {toastr.options = {\r\n                            \"closeButton\": true,\r\n                            \"debug\": false,\r\n                            \"newestOnTop\": true,\r\n                            \"progressBar\": true,\r\n                            \"positionClass\": \"toast-top-right\",\r\n                            \"preventDuplicates\": false,\r\n                            \"onclick\": null,\r\n                            \"showDuration\": \"300\",\r\n                            \"hideDuration\": \"1000\",\r\n                            \"timeOut\": \"5000\",\r\n                            \"extendedTimeOut\": \"1000\",\r\n                            \"showEasing\": \"swing\",\r\n                            \"hideEasing\": \"linear\",\r\n                            \"showMethod\": \"fadeIn\",\r\n                            \"hideMethod\": \"fadeOut\"\r\n                        }\r\n                    toastr.error(\"Some error occurred please try again!\")})\r\n\r\n                    if(bodyData.data) {\r\n                        this.setState({activePage: Math.floor(pageStart/10),pageStart: pageStart});\r\n                        let columns = [];\r\n                        let count = bodyData.data.count;\r\n                        let data = [];\r\n                        if (bodyData.data.segmentationData)\r\n                            data = bodyData.data.segmentationData\r\n                        else\r\n                            data = bodyData.data.renewalData\r\n                        Object.keys(data[0]).map(function (val) {\r\n                            if(val !== \"COMPANYID\") {\r\n                                let newColumn = {\r\n                                    label: val,\r\n                                    field: val,\r\n                                    width: 100\r\n                                }\r\n\r\n                                columns.push(newColumn)\r\n                            }\r\n                        });\r\n\r\n                        columns.push({\r\n                            label: 'Action',\r\n                            field: 'Action'\r\n                        });\r\n\r\n                        let rows = [];\r\n                        data.map(function (val) {\r\n                            let newRow = {}\r\n                            Object.keys(val).map(function (key) {\r\n\r\n                            if(key === \"COMPANYID\"){\r\n                                newRow['Action']  = [<div className=\"d-flex\"><img src={Ledger} style={{width: \"20px\",height: \"20px\",cursor: \"pointer\",marginRight: \"10px\"}} title=\"Client Ledger\" onClick={()=>{window.open('http://weberp.intermesh.net/STS/STSDetpopup.aspx?comp_id='+val[key]+'&ISCL=1','_blank','toolbar=no,location=0,directories=no,status=no,menubar=no,titlebar=no,scrollbars=yes,resizable=no,copyhistory=no,width=905,height=565,left=300,top=200,screenX=150,screenY=100')}}/><img src={History} style={{width: \"20px\",height: \"20px\",cursor: \"pointer\"}} title=\"STS\" onClick={()=>{window.open('http://weberp.intermesh.net/STS/STSDetpopup.aspx?comp_id='+val[key],'_blank','toolbar=no,location=no,directories=no,status=no,scrollbars=yes,resizable=yes,copyhistory=no,width=905,height=565,left=150,top=100,screenX=150,screenY=100')}}/></div>]\r\n                            }else {\r\n                                newRow[key] = val[key] === null || val[key] === \"\" ? \"N/A\" : val[key];\r\n                            }\r\n                            });\r\n                            rows.push(newRow)\r\n                        });\r\n\r\n                        let completeData = {\r\n                            columns: columns,\r\n                            rows: rows\r\n                        }\r\n                        await this.setState({\r\n                            showProgress: progressStatus,\r\n                            showTable: true,\r\n                            data: completeData,\r\n                            count: count\r\n                        });\r\n                        console.log(completeData)\r\n                    } else\r\n                        await this.setState({showProgress: progressStatus, open: true});\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes, theme } = this.props;\r\n        const { open } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classNames(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar disableGutters={!open}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.handleDrawerOpen}\r\n                            className={classNames(classes.menuButton)}\r\n                        >\r\n                            {this.state.open?\"\":<MenuIcon />}\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                    {this.state.open?\"\":<div className=\"d-flex align-items-center h-100\" style={{backgroundColor:\"#00A699\",padding: \"10px\",position: \"absolute\",left: \"50px\"}}><Typography variant=\"h6\">Segmentation Report</Typography></div>}\r\n                    <Button disabled={this.state.exportEnable} variant=\"contained\" className=\"export\" style={{width: \"110px\",position: \"absolute\",right: \"20px\",top: \"10px\"}} color=\"primary\" onClick={this.exportToExcel.bind(this)}>\r\n                        Export<GetAppIcon/>\r\n                    </Button>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className=\"d-flex justify-content-between\">\r\n                    <Typography variant={\"h6\"} className={[classes.textColor,classes.typefont,\"px-3 mt-2\"]}>\r\n                        Group Type\r\n                    </Typography>\r\n                    <IconButton onClick={this.handleDrawerOpen}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                    </div>\r\n                    <Divider/>\r\n                    <FormGroup row className=\"mx-3\">\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    id=\"MyGroup\"\r\n                                    value=\"checkedB\"\r\n                                    color=\"primary\"\r\n                                    checked={this.state.myGroupChecked}\r\n                                    onChange={this.handleGroupChange}\r\n\r\n                                />\r\n                            }\r\n                            label=\"My Group\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    id=\"MyDottedGroup\"\r\n                                    value=\"checkedB\"\r\n                                    color=\"primary\"\r\n                                    checked={this.state.myDottedGroupChecked}\r\n                                    onChange={this.handleDottedGroupChange}\r\n\r\n                                />\r\n                            }\r\n                            label=\"My Dotted Group\"\r\n                        />\r\n                    </FormGroup>\r\n                    <Asynchronous label=\"Search Employee*\" id=\"employee\" search=\"employee\" className=\"mx-3\" defaultValue={this.props.employeename +\" - \"+this.props.employeeid} employeeid={this.props.employeeid} AK={this.props.AK} menuid={102} fnsid={227}/>\r\n                    <Typography variant={\"h6\"} className={[classes.textColor,classes.typefont,\"px-3 mt-4\"]}>\r\n                        Assigned To<span style={{color: \"red\"}}>*</span>\r\n                    </Typography>\r\n                    <Divider/>\r\n                    <FormControl component=\"fieldset\" className=\"mx-3\">\r\n                        <RadioGroup aria-label=\"gender\" value={this.state.assignType} onChange={this.handleAssignChange}>\r\n                            <FormControlLabel\r\n                                value=\"1\"\r\n                                control={<Radio id=\"SalesAssign\" color=\"primary\"/>}\r\n                                label=\"Sales Assigned To\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"2\"\r\n                                control={<Radio id=\"TeleAssign\" color=\"primary\" />}\r\n                                label=\"Tele Assigned To\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <Typography variant={\"h6\"} className={[classes.textColor,classes.typefont,\"px-3 mt-2\"]}>\r\n                        Type<span style={{color: \"red\"}}>*</span>\r\n                    </Typography>\r\n                    <Divider/>\r\n                    <FormControl component=\"fieldset\" className=\"mx-3\">\r\n                        <RadioGroup aria-label=\"gender\" value={this.state.reportType} onChange={this.handleReportChange}>\r\n                            <FormControlLabel\r\n                                value=\"3\"\r\n                                control={<Radio id=\"SegmentReport\" color=\"primary\" />}\r\n                                label=\"Non-Renewal Segment\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"4\"\r\n                                control={<Radio id=\"RenewalReport\" color=\"primary\" />}\r\n                                label=\"Renewal Segment\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <div className=\"d-flex justify-content-around mt-2\">\r\n                        <button type=\"button\" style={{width: \"200px\"}} onClick={this.showTable.bind(this)} className=\"btn btn-outline-success\">Search</button>\r\n                    </div>\r\n                </Drawer>\r\n                <main\r\n                    className={classNames(classes.content)}\r\n                    style={{marginTop: \"45px\"}}\r\n                >\r\n                    {this.state.showProgress?<div className=\"mod d-flex justify-content-center align-items-center\"><img src={Loader} className=\"loader\"/></div>:\"\"}\r\n                    {this.state.showTable?<DatatablePage defaultPaging={false} info={false} data={this.state.data} count={this.state.count} paging={this.paging.bind(this)} activePage={this.state.activePage} pageStart={this.state.pageStart}/>:\"\"}\r\n\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSegmentationReport.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SegmentationReport);","import 'isomorphic-fetch';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function Asynchronous(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState([]);\r\n    const [loading,setLoading] = React.useState(false);\r\n    let option = props.defaultValue\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n            setLoading(false)\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            id={props.id}\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            className={props.className}\r\n            getOptionSelected={(option, value) => option === value}\r\n            getOptionLabel={option => option}\r\n            options={options}\r\n            defaultValue={option}\r\n            loading={loading}\r\n            popupIcon={\"\"}\r\n            renderInput={params => (\r\n                <TextField\r\n                    {...params}\r\n                    label={props.label}\r\n                    fullWidth\r\n                    style={props.style}\r\n                    variant=\"outlined\"\r\n                    onChange={function(event){\r\n                        setLoading(true)\r\n                        let countries;\r\n                        let active = true;\r\n                        let value = event.target.value;\r\n                        let MyGroup = props.Mygroup === undefined ? \"1\" : props.Mygroup\r\n                        if (active && value !== \"\") {\r\n                            const url = \"https://weberp6.intermesh.net:444/userlist/assignto?keyword=\" + value + \"&menuid=\"+props.menuid+\"&fnsid=\"+props.fnsid+\"&me=\" + MyGroup + \"&empid=\"+props.employeeid+\"&limit=1&AK=\"+props.AK;                            \r\n                            console.log(url)\r\n                             fetch(url).then(res => res.json())\r\n                                .then(\r\n                                    (result) => {\r\n                                        countries = result;\r\n                                        if (Object.keys(countries).length > 0)\r\n                                            setOptions(Object.keys(countries).map(key => countries[key]));\r\n                                        else\r\n                                            setLoading(false)\r\n                                    }\r\n                                );\r\n\r\n                        }\r\n                    }}\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}","import React from \"react\";\r\nimport { MDBPagination, MDBPageItem, MDBPageNav, MDBCol, MDBRow } from \"mdbreact\";\r\n\r\nconst PaginationPage = (props) => {\r\n    const items = []\r\n    let count = Math.floor(props.count/10) + (props.count%10 > 0?1:0);\r\n    if(props.activePage+1 === 1) {\r\n        items.push(<MDBPageItem disabled>\r\n            <MDBPageNav className=\"page-link\" style={{borderRadius: \"0\"}}>\r\n                <span>First</span>\r\n            </MDBPageNav>\r\n        </MDBPageItem>)\r\n    }else{\r\n        items.push(<MDBPageItem onClick={() => props.paging(1)}>\r\n            <MDBPageNav className=\"page-link\" style={{borderRadius: \"0\"}}>\r\n                <span>First</span>\r\n            </MDBPageNav>\r\n        </MDBPageItem>)\r\n    }\r\n    let start = 1;\r\n    let end = start+4\r\n    if(end>count){\r\n        end = count;\r\n    }\r\n    if(props.activePage>=3){\r\n        start = props.activePage-1;\r\n        end = start+4;\r\n        if(end>count){\r\n            end = count;\r\n            start = end-4;\r\n            if(start < 1){\r\n                start = 1\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(start+\" \"+end)\r\n\r\n    for(let i = start;i<=end;i++){\r\n        if(i === end+1){\r\n            items.push(<MDBPageItem style={{cursor: \"default\"}} >\r\n                <MDBPageNav>\r\n                    ... <span className=\"sr-only\">(current)</span>\r\n                </MDBPageNav>\r\n            </MDBPageItem>)\r\n        }else {\r\n            if (i === props.activePage+1) {\r\n                items.push(<MDBPageItem active onClick={() => props.paging((i-1) * 10 + 1)}>\r\n                    <MDBPageNav className=\"page-link\">\r\n                        {i}\r\n                    </MDBPageNav>\r\n                </MDBPageItem>)\r\n            } else {\r\n                items.push(<MDBPageItem onClick={() => props.paging((i-1) * 10 + 1)}>\r\n                    <MDBPageNav className=\"page-link\">\r\n                        {i}\r\n                    </MDBPageNav>\r\n                </MDBPageItem>)\r\n            }\r\n        }\r\n\r\n    }\r\n    if(props.activePage+1 === count) {\r\n        items.push(<MDBPageItem disabled>\r\n            <MDBPageNav className=\"page-link\" style={{borderRadius: \"0\"}}>\r\n                <span>Last</span>\r\n            </MDBPageNav>\r\n        </MDBPageItem>)\r\n    }else{\r\n        items.push(<MDBPageItem onClick={() => props.paging((count-1) * 10 + 1)}>\r\n            <MDBPageNav className=\"page-link\" style={{borderRadius: \"0\"}}>\r\n                <span>Last</span>\r\n            </MDBPageNav>\r\n        </MDBPageItem>)\r\n    }\r\n\r\n    return (\r\n        <MDBRow style={{cursor: \"pointer\"}}>\r\n            <MDBCol>\r\n                <MDBPagination circle>\r\n\r\n                    {items}\r\n\r\n\r\n                </MDBPagination>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    )\r\n}\r\n\r\nexport default PaginationPage;","import React from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PaginationPage from \"./Pagination\";\r\n\r\nfunction DatatablePage(props){\r\n\r\n    return (\r\n        <Card style={props.style}>\r\n            <CardContent style={props.innerStyle}>\r\n        <MDBDataTable\r\n            id={props.id}\r\n            striped={props.striped === null?true:props.striped}\r\n            bordered\r\n            responsive={props.responsive}\r\n            hover\r\n            className={props.className}\r\n            data={props.data}\r\n            searching={false}\r\n            info={props.info}\r\n            noBottomColumns\r\n            paging={props.defaultPaging}\r\n            sortable={false}\r\n            style={props.style}\r\n            entries={props.entries}\r\n        />\r\n        <div className=\"d-flex justify-content-between\">\r\n            {props.paging?<div className=\"pl-2\">Showing entries {props.pageStart} to {props.pageStart+9>props.count?props.count:props.pageStart+9} of {props.count}</div>:\"\"}\r\n            {props.paging?<PaginationPage count={props.count} paging={props.paging} activePage = {props.activePage}/>:\"\"}\r\n        </div>\r\n            </CardContent>\r\n            <div className=\"d-flex justify-content-between mt-2\">\r\n                {props.ospaging?<div className=\"pl-2\">Showing entries {props.pageStart} to {props.pageStart+9>props.count?props.count:props.pageStart+9} of {props.count}</div>:\"\"}\r\n                {props.ospaging?<PaginationPage count={props.count} paging={props.ospaging} activePage = {props.activePage}/>:\"\"}\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default DatatablePage;"],"sourceRoot":""}